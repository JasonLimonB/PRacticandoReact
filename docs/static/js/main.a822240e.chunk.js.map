{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategori","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","GifGridItem","title","image","src","alt","width","getGifs","cat","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","categoria","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","category","setCategory","catt","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAMd,2BACIO,UAAU,SACVC,KAAK,OACLC,MAAUV,EACVW,SAlBS,SAACR,GAClBF,EAAeE,EAAES,OAAOF,YCNnBG,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjC,OACI,oCACI,yBAAKP,UAAU,0CACX,4BAAMM,GACN,yBAAKE,IAAKD,EAAOE,IAAKH,EAAOI,MAAM,a,uBCPtCC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0DAC6CC,UAAUH,GADvD,sDAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRjB,MAAOgB,EAAIhB,MACXC,MAAK,UAAGe,EAAIE,cAAP,aAAG,EAAYC,iBAAiBX,QAT1B,kBAYZM,GAZY,4CAAH,sDCIPM,EAAU,SAAC,GAAe,IAAZd,EAAW,EAAXA,IAAW,ECCV,SAACe,GAAe,IAAD,EACZpC,mBAAS,CAChC4B,KAAM,GACNS,SAAS,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBvC,OAZAC,qBAAW,WAEPpB,EAAQgB,GACPK,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAInB,CAACD,IAEIE,EDjBiBK,CAAatB,GAA9BO,EAF2B,EAE3BA,KAAMS,EAFqB,EAErBA,QAGb,OACI,oCACI,4BAAMhB,GACJgB,GAAW,sCACb,yBAAK5B,UAAU,SAEHmB,EAAKE,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACIa,IAAKb,EAAIC,IACJD,UEdxBc,EAAe,WAAO,IAAD,EAEE7C,mBAAS,CAAC,YAFZ,mBAEvB8C,EAFuB,KAEbC,EAFa,KAI9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAahD,YAAagD,IAC1B,6BACA,4BAEQD,EAAShB,KAAK,SAAAkB,GAAI,OACd,kBAAC,EAAD,CACIJ,IAAKI,EACL3B,IAAK2B,UCbjCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a822240e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategori} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleChange = (e)=>{\n        setInputValue( e.target.value );\n    }\n\n    const handleSumbit = (e) =>{\n        e.preventDefault();\n        if( inputValue.trim().length > 2 ){\n            setCategori( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSumbit } >\n            <input \n                className=\"inpCat\" \n                type=\"text\" \n                value = { inputValue }\n                onChange={ handleChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategori: PropTypes.func.isRequired\n}\n\n","import React from 'react'\n\nexport const GifGridItem = ( {title, image} ) => {\n    return (\n        <>\n            <div className=\"card animate__animated animate__fadeIn\">\n                <h3>{ title }</h3>\n                <img src={image} alt={title} width=\"350px\"/>\n            </div>\n        </>\n    )\n}\n","export const getGifs = async(cat)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(cat) }&api_key=dX5Yn5ChVPLM0t41qHKq3aCLCwDMXMQY`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            image : img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}","import React from 'react';\nimport { GifGridItem } from './GifGridItem';\nimport {useFetchGifs} from '../hooks/useFetchGifs';\n\nexport const GifGrid = ( { cat } ) => {\n\n    const {data, loading} = useFetchGifs(cat);\n\n    \n    return (\n        <>\n            <h3>{ cat }</h3>\n            { loading && <p>Loading</p> }\n            <div className=\"cont \">\n                    {\n                        data.map( img => (\n                            <GifGridItem \n                                key={img.id}\n                                { ...img }\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n","import {useState} from 'react';\nimport { useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (categoria) => {\n    const  [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () =>{\n\n        getGifs(categoria)\n        .then(imgs=>{\n            setState({\n                data: imgs,\n                loading: false\n            })\n        });\n\n    },[categoria]);\n\n    return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './AddCategory';\nimport { GifGrid } from './GifGrid'\n\nexport const GifExpertApp = () => {\n\n    const [category, setCategory] = useState([\"Pokemon\"]);\n    \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategori={setCategory} />\n            <hr />\n            <ol>\n                { \n                    category.map( catt =>\n                        <GifGrid \n                            key={catt}\n                            cat={catt} \n                        />\n                    ) \n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}